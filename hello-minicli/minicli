#!/usr/bin/env php

<?php
ini_set('display_errors', '0');
use Minicli\App;
use Minicli\Curly\Client;
use Minicli\Exception\CommandNotFoundException;

if (php_sapi_name() !== 'cli') {
    exit;
}

$vendor_path = __DIR__ . '/vendor/autoload.php';

if (!file_exists($vendor_path)) {
    $minicli_home = getenv('MINICLI_HOME') ?: '/usr/share/minicli';
    $vendor_path = $minicli_home . '/vendor/autoload.php';
}

require $vendor_path;

$app = new App(['debug' => true]);

$app->setSignature('Usage: ./minicli fact');

/**
 * ./minicli fact
 * Shows a quote from the Cat Fact API
 */
$app->registerCommand('fact', function () use ($app) {
    $client = new Client();

    $response = $client->get('https://catfact.ninja/fact');
    if ($response['code'] !== 200) {
        $app->getPrinter()->error('An API error has occurred. Response code: ' . $response['code']);
        if ($app->config->debug) {
            $app->getPrinter()->error('Debug Info:');
            print_r($response);
            var_dump($client->agent);
        }
        return;
    }

    $content = json_decode($response['body'], true);
    $app->getPrinter()->info($content['fact']);
});

try {
    $app->runCommand($argv);
} catch (CommandNotFoundException $notFoundException) {
    $app->getPrinter()->error("Command Not Found.");
    return 1;
} catch (Exception $exception) {
    if ($app->config->debug) {
        $app->getPrinter()->error("An error occurred:");
        $app->getPrinter()->error($exception->getMessage());
    }
    return 1;
}

return 0;